{"version":3,"sources":["components/CardImg.js","components/CardAvatar.js","components/CardTitle.js","components/Card.js","components/CardContainer.js","components/List.js","components/Main.js","components/Arena.js","App.js","serviceWorker.js","index.js"],"names":["imgContainerStyles","backgroundColor","height","margin","borderTopRightRadius","borderTopLeftRadius","background","backgroundSize","imgStyles","width","CardImg","name","this","props","style","className","src","imgSrc","alt","Component","avatarContainerStyles","zIndex","position","top","left","right","border","display","textAlign","borderRadius","avatarImgStyles","bottom","CardAvatar","avatarSrc","titleStyles","color","fontWeight","outline","subTitleStyles","CardTitle","id","targetId","title","subTitle","cardContainerStyles","boxShadow","cardBackStyles","backgroundPosition","cardBackImgStyles","Card","stats","race","selected","cardBackImgSrc","length","Class","map","charClass","Name","join","bodyStyles","headerStyles","CardContainer","state","fighters","cards","active","index","fighter","onClick","setState","key","Full","Race","Stats","require","Main","Arena","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6408c3f6.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst imgContainerStyles = {\n    backgroundColor:\"#fff\",\n    height: \"35%\",\n    margin: 0,\n    borderTopRightRadius: 35,\n    borderTopLeftRadius: 35,\n    background: \"#444\",\n    backgroundSize: \"cover\"\n  }\n  const imgStyles = {\n    width: 200,\n    borderTopRightRadius: 35,\n    borderTopLeftRadius: 35\n  }\n\nclass CardImg extends Component {\n    \n    render(){\n      const { name } = this.props\n      return (\n         <div style={imgContainerStyles} className=\"imgContainer\">\n              <img src={this.props.imgSrc} className=\"img\" style={imgStyles} alt={ 'Header image above avatar of Character ' + name }/>\n         </div>\n      )\n    }\n  }\n\n  export default CardImg","import React, { Component } from 'react'\n\nconst avatarContainerStyles = {\n    width: \"140px\",\n    height: \"140px\",\n    zIndex: \"9\",\n    position: \"relative\",\n    top: \"-85px\",\n    left: \"28px\",\n    right: \"0\",\n    margin: \"0 auto\",\n    border: \"4px solid #fff\",\n    background: \"#000\",\n    backgroundSize: \"cover\",\n    display: \"inline-block\",\n    textAlign: \"center\",\n    borderRadius: \"50%\"\n  }\n  const avatarImgStyles = {\n    width: \"100%\",\n    position: \"absolute\",\n    top: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    right: \"0\",\n    margin: \"auto\",\n    borderRadius: \"50%\"\n  }\n  \nclass CardAvatar extends Component {\n    \n    render(){\n      const { name } = this.props\n      return (\n        <div style={avatarContainerStyles} className=\"infoContainer\">\n          <img src={this.props.avatarSrc} style={avatarImgStyles} alt={ 'Face Avatar of Character ' + name}/>\n        </div>\n      )\n    }\n  }\n\n  export default CardAvatar","import React, { Component } from 'react'\n\nconst titleStyles = {\n    color:\"#555\",\n    fontWeight: \"100\",\n    outline: \"none\",\n    margin: \"0px\",\n    display: \"inline-block\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"relative\",\n    top: \"-75px\"\n  }\n  const subTitleStyles = {\n    position: \"relative\",\n    top: \"-95px\",\n    textAlign: \"center\",\n    fontWeight: \"100\",\n    color: \"#888\"\n  }\n\nclass CardTitle extends Component {\n    \n    render(){\n      return (\n        <div className=\"titleDiv\">\n          <h1 id={this.props.targetId} style={titleStyles} className=\"card-title\">{this.props.title}</h1>\n          <h4 style={subTitleStyles} className=\"subTitle\">{this.props.subTitle}</h4>\n        </div>\n      )\n    }\n  }\n\n  export default CardTitle","import React, { Component } from 'react'\n\nimport CardImg from './CardImg'\nimport CardAvatar from './CardAvatar'\nimport CardTitle from './CardTitle'\n\nconst cardContainerStyles = {\n    width: \"200px\",\n    height: \"300px\",\n    background: \"#fff\",\n    borderRadius: 35,\n    boxShadow: \"1px 1px 35px #444\"\n}\n\nconst cardBackStyles = {\n    height: 300,\n    width: 200,\n    position: \"absolute\",\n    top: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    right: \"0\",\n    margin: \"auto\",\n    borderRadius: \"35px\",\n    boxShadow: \"1px 1px 35px #444\",\n    background: \"')\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"right\"\n  }\n\n  const cardBackImgStyles = {\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: 35,\n    position: \"absolute\"\n  }\n\n\n\nclass Card extends Component {\n\n    render(){\n      const { name, stats, race, selected } = this.props\n      return (\n          <div className=\"flipperContainer\">\n            <div className={selected ? \"flipper-selected\" : \"flipper\"}>\n                <div style={cardBackStyles} className=\"cardFront\">\n                <img className=\"cardBackImg\" style={cardBackImgStyles} src={this.props.cardBackImgSrc} alt={ 'Full size image of character ' + name }/>\n              </div>\n               <div style={cardContainerStyles} className=\"cardBack cardContainer\">\n                   <CardImg imgSrc={this.props.imgSrc} name={ name } />\n                   <CardAvatar avatarSrc={this.props.avatarSrc} name={ name } />\n                   <CardTitle title={ name } subTitle={ race + ' ' + stats[stats.length - 1].Class.map(charClass => charClass.Name).join(\", \") } />\n               </div>\n              \n             </div>\n        </div>\n      )\n    }\n}\n\nexport default Card","import React, { Component } from 'react'\nimport Card from './Card'\nimport List from './List'\n\nconst bodyStyles = {\n    background: \"-webkit-gradient(linear, left top, right top, color-stop(0%, transparent), color-stop(50%,red), color-stop(100%,transparent))\",\n    background: \"-webkit-linear-gradient(left, transparent 0%,red 50%,transparent 100%)\", /* Chrome10+, Safari5.1+ */\n    background: \"-moz-linear-gradient(left, transparent 0%,red 50%,transparent 100%)\",    /* FF3.6+ */\n    background: \"linear-gradient(to bottom right,#ff5555 40%,#5555ff 100%)\",\n    width: \"100%\",\n    height: \"100vh\",\n    overflowX: \"hidden\"\n  }\nconst headerStyles = {\n    textAlign: \"center\",\n    color:\"#fff\",\n}\n\nclass CardContainer extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        fighters: props.fighters,\n        cards: [\n          {\n            active: false,\n            index: '0'\n          },\n          {\n            active: false,\n            index: '1'\n          },\n          {\n            active: false,\n            index: '2'\n          },\n          {\n            active: false,\n            index: '3'\n          },\n          {\n            active: false,\n            index: '4'\n          },\n          {\n            active: false,\n            index: '5'\n          },\n          {\n            active: false,\n            index: '6'\n          }\n        ],\n      }\n    }\n    \n    render(){\n      const { fighters, cards } = this.state\n      let active \n      return (\n       <div style={bodyStyles} className=\"body\">\n          <h1 style={headerStyles} className=\"header\"></h1>\n          <section className='grid'>\n            <aside className='aspect-ratio'></aside>\n            <article>\n              <ul className='grid absolute-fill'>\n                { fighters.map((fighter, id) => \n                <div onClick={() => {\n                cards[id].active = !cards[id].active\n                this.setState({\n                  cards\n                })\n                }\n                } key={ id }>\n                <Card imgSrc={'./images/headers/placeholder.gif'} avatarSrc={'./images/avatars/' + fighter.Name + '.jpg'} cardBackImgSrc={'./images/backs/' + fighter.Name + '.jpg' } name={ fighter.Full } race={ fighter.Race } key={ id } id={ id } stats={ fighter.Stats } selected={ cards[id].active }/>\n                </div>  \n                  )}\n              </ul>\n            </article>\n          </section>\n       </div>\n      )\n    }\n  }\n\n  export default CardContainer","import React, { Component } from 'react'\n\nclass List extends Component {\n    /*\n    constructor(props){\n        super(props)\n    }\n    */\n\n    render() {\n        return(\n            <div>\n               \n            </div>\n        )\n    }\n}\n\nexport default List","import React, { Component } from 'react'\n\nimport CardContainer from './CardContainer'\n\nconst fighters = require('../data/array.json')\n\nclass Main extends Component {\n    constructor() {\n        super()\n        this.state = {\n            fighters: []\n        }\n    }\n    componentWillMount() {\n        this.setState({\n            fighters: fighters\n        })\n    }\n    render() {\n        const { fighters } = this.state\n        return (\n            <div>\n                <CardContainer fighters={ fighters }/>\n            </div>\n        )\n    }\n}\n\nexport default Main","import React, { Component } from 'react'\n\nclass Arena extends Component {\n    constructor() {\n        super()\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Arena!</h1>\n            </div>\n        )\n    }\n}\n\nexport default Arena","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nimport Main from './components/Main'\nimport Arena from './components/Arena'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route exact path='/' component={ Main } />\n        <Route exact path='/fight' component={ Arena } />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}